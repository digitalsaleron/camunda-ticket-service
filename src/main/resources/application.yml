sleep.time.second: 1
spring:
   boot.admin.client:
      enabled: false
      url: ${springboot-admin-server}
      instance:
         prefer-ip: true
   application.name: zeebe-ticket-service
   jmx.enabled: true
   cloud:
      function.definition: validateTicket;approveTicket;resolveTicket;notifyFailedTicket;notifyRejectedTicket;validateInput;sftpDownload;unzip;extractMetadata;convertToJPG;convertToTIF;autoClassify;manualClassify;processCheck;sftpExport
      stream:
         binders:
            kafka1:
               type: kafka
               environment:
                  spring:
                     cloud:
                        stream:
                           kafka:
                              binder:
                                 brokers: ${bootstrap.server}
                                 configuration.security.protocol: PLAINTEXT
         bindings:
            applicationMetrics.destination: ${tenant.prefix}.process-metrics
            validateTicket-in-0:
               binder: kafka1
               destination: ticket-validation-requests
               group: ticket-service
               consumer:
                  maxAttempts: 1
            validateTicket-out-0:
               binder: kafka1
               destination: ticket-validation-responses
            approveTicket-in-0:
               binder: kafka1
               destination: ticket-approval-requests
               group: ticket-service
               consumer:
                  maxAttempts: 1
            approveTicket-out-0:
               binder: kafka1
               destination: ticket-approval-responses
            resolveTicket-in-0:
               binder: kafka1
               destination: ticket-resolution-requests
               group: ticket-service
               consumer:
                  maxAttempts: 1
            resolveTicket-out-0:
               binder: kafka1
               destination: ticket-resolution-responses
            notifyFailedTicket-in-0:
               binder: kafka1
               destination: ticket-notification-requests
               group: ticket-service
               consumer:
                  maxAttempts: 1
            notifyFailedTicket-out-0:
               binder: kafka1
               destination: ticket-notification-responses
            notifyRejectedTicket-in-0:
               binder: kafka1
               destination: ticket-notification-rand4-requests
               group: ticket-service
               consumer:
                  maxAttempts: 1
            notifyRejectedTicket-out-0:
               binder: kafka1
               destination: ticket-notification-rand4-responses
         kafka:
            binder:
               minPartitionCount: 1
               consumerProperties:
                  isolation.level: read_committed
                  max.poll.records: 5
                  max.poll.interval.ms: 300000
               transaction:
                  transaction-id-prefix: ticket-service-${random.uuid}-
                  producer:
                     configuration:
                        max.in.flight.requests.per.connection: 1
                        retries: 1
                        acks: all
                        enable.idempotence: true
   datasource:
      url: jdbc:h2:./data/sample_mysql_db
      username: root
      password: admin
      driver-class-name: org.h2.Driver
      platform: h2
   h2.console:
      enabled: true
      path: /h2-console
   jpa:
      hibernate:
         ddl-auto: update
logging:
   file:
      name: ./logs/${spring.application.name}.log
      max-file-size: 10MB
      max-history: 2
      total-size-cap: 30MB
      clean-history-on-start: true
   pattern:
      rolling-file-name: ./logs/${spring.application.name}-%d{yyyy-MM-dd}.%i.log
   level:
      org.apache.kafka.clients: info
      org.camunda.bpm.client: info
management:
   metrics:
      export:
         atlas:
            enabled: false
            step: 5s
            uri: http://localhost:7101/api/v1/publish
         elastic:
            enabled: false
            step: 5s
            host: http://192.168.56.4:9200
            index: metrics-${spring.application.name}
            indexDateFormat: yyyy-MM-dd
   endpoints:
      health.binders.enabled: true
      enabled-by-default: true
      web:
         exposure.include: '*'
         cors:
            allowed-origins: '*'
            allowed-methods: GET,POST,PUT
      jmx.exposure.include: '*'
   endpoint:
      health.show-details: always

zeebe.client:
   broker.gatewayAddress: ${zeebe-gateway}
   security:
      plaintext: true
      #certPath: C:/Users/thminh_1/.ssh/ssl/digitalsaleron.cer
      #certPath: C:/Users/thminh_1/.ssh/zeebeclient.keystore.jks
   worker:
      maxJobsActive: 1
      threads: 1
   